#@ load("@ytt:data", "data")

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: #@ data.values.name
  namespace: #@ data.values.namespace
spec:
  selector:
    matchLabels:
      app: #@ data.values.name
  template:
    metadata:
      labels:
        app: #@ data.values.name
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
      - name: #@ data.values.name
        image: #@ "{}:{}".format(data.values.image_name, data.values.image_tag)
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: #@ data.values.dotnet_environment
        ports:
        - containerPort: #@ int(data.values.container_port)
  replicas: #@ int(data.values.replica_count)

---
apiVersion: v1
kind: Service
metadata:
  name: #@ data.values.name
  namespace: #@ data.values.namespace
spec:
  ports:
  - port: #@ int(data.values.service_port)
    targetPort: #@ int(data.values.container_port)
  selector:
    app: #@ data.values.name

#@ if/end data.values.hostname:
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: #@ data.values.name
  namespace: #@ data.values.namespace
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    ingress.kubernetes.io/force-ssl-redirect: "true"
    kubernetes.io/ingress.class: contour
    kubernetes.io/tls-acme: "true"
spec:
  tls:
    - secretName: #@ data.values.tls_secret
      hosts:
        - #@ data.values.hostname
  rules:
  - host: #@ data.values.hostname
    http:
      paths:
      - pathType: Prefix
        path: /api
        backend:
          service:
            name: #@ data.values.name
            port:
              number: #@ int(data.values.service_port)
