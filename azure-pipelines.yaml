trigger:
  - production

variables:
  - name: major
    value: 0
  - name: minor
    value: 21
  - name: patch
    value: 0
  - name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE
    value: true
  - name: DOTNET_CLI_TELEMETRY_OPTOUT
    value: 1
  - group: PackageSigningSecrets

name: $(major).$(minor).$(patch)

stages:
  - stage: assemble
    displayName: Assemble
    jobs:
      - job: build
        displayName: Build
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: UseDotNet@2
            displayName: 'Install .NET Core SDK 5.0'
            inputs:
              packageType: sdk
              version: 5.0.x
          - task: UseDotNet@2
            displayName: 'Install .NET Core SDK 2.0'
            inputs:
              packageType: sdk
              version: 2.0.x
          - task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
            displayName: Start SonarQube Analysis
            inputs:
              SonarCloud: SonarCloud
              organization: steeltoeoss
              projectKey: InitializrApi
              extraProperties: |
                sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/**/*.opencover.xml
          - task: DotNetCoreCLI@2
            displayName: dotnet restore
            inputs:
              command: restore
          - task: DotNetCoreCLI@2
            displayName: dotnet build
            inputs:
              command: build
              arguments: --no-restore /p:TreatWarningsAsErrors=True
          - task: DotNetCoreCLI@2
            displayName: dotnet test
            inputs:
              command: test
              arguments: --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
          - task: DotNetCoreCLI@2
            displayName: dotnet publish
            inputs:
              command: publish
              arguments: --no-build
              zipAfterPublish: false
          - task: DotNetCoreCLI@2
            displayName: dotnet pack
            inputs:
              command: pack
              packagesToPack: src/InitializrApi.Config
              arguments: --no-build
          - task: Powershell@2
            displayName: Sign NuGets
            inputs:
              filePath: sign/SignPackages.ps1
            env:
              ArtifactStagingDirectory: $(Build.ArtifactStagingDirectory)
              SignClientUser: $(SignClientUser)
              SignClientSecret: $(SignClientSecret)
          - task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
            displayName: Stop SonarQube Analysis
          - task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
            displayName: Publish SonarQube Analysis
          - task: PublishBuildArtifacts@1
            displayName: Publish Build Artifacts
  - stage: deploy
    displayName: Deploy
    dependsOn: assemble
    condition:
      not(eq(variables['build.reason'], 'PullRequest'))
    jobs:
      - job: deployToProduction
        displayName: Deploy to Production
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: Docker@2
            displayName: Push Docker Image
            inputs:
              command: buildAndPush
              containerRegistry: SteeltoeContainerRegistry
              repository: initializr-api
              tags: |
                $(Build.BuildId)
                latest
          - task: KubernetesManifest@0
            displayName: Deploy to Production Cluster
            inputs:
              action: deploy
              kubernetesServiceConnection: SteeltoeProductionAKS
              manifests: deploy/kubernetes/manifest.yaml
              containers: steeltoe.azurecr.io/initializr-api:$(Build.BuildId)
              namespace: initializr
